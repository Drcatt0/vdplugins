(function(p,r,s,e){"use strict";const Patcher=e.patcher.create("MarkAllAsRead"),{findByProps:findByProps,findByStoreName:findByStoreName}=s,ReadIcon=e.assets.getAssetIDByName("ic_rulebook_16px"),Toasts=e.ui.toasts,React=e.React,{View}=findByProps("View"),getSetting=(key,defaultValue)=>p.storage[key]??defaultValue,bulkMarkAllAsRead=()=>{try{let toRead=[];const ReadStateStore=findByStoreName("ReadStateStore"),ChannelStore=findByStoreName("ChannelStore"),AckUtils=findByProps("bulkAck"),AllReadStates=ReadStateStore.getAllReadStates().map(m=>({...m})),OnlyUnreadOrMentions=AllReadStates.filter(m=>ReadStateStore.hasUnread(m.channelId));if(getSetting("dm",true)){const UnreadDMs=OnlyUnreadOrMentions.filter(m=>ChannelStore.getChannel(m.channelId)?.isDM()),DMsToRead=UnreadDMs.map(m=>({channelId:m.channelId,messageId:m._lastMessageId}));toRead.push(...DMsToRead)}if(getSetting("server",true)){const UnreadGuildChannels=OnlyUnreadOrMentions.filter(m=>Boolean(ChannelStore.getChannel(m.channelId)?.getGuildId())),GuildChannelsToRead=UnreadGuildChannels.map(m=>({channelId:m.channelId,messageId:m._lastMessageId}));toRead.push(...GuildChannelsToRead)}AckUtils.bulkAck(toRead);Toasts.open({content:"Marked all messages as read",source:e.assets.getAssetIDByName("ic_check_24px")})}catch(err){console.error("Error marking messages as read:",err)}},plugin={onLoad(){Patcher.after(View,"render",(_,args,res)=>{const GuildPopoutMenu=e.utilities.findInReactTree(res,r=>r.props?.guildId&&r.props?.yPos&&r.props?.onClose);if(GuildPopoutMenu){Patcher.after(GuildPopoutMenu.type,"render",(_,args,res)=>{res.props.rows.unshift({icon:ReadIcon,text:"Mark All As Read",onClick:bulkMarkAllAsRead})})}})},onUnload(){Patcher.unpatchAll()}};return p.default=plugin,Object.defineProperty(p,"__esModule",{value:true}),p})({},vendetta.plugin,vendetta.metro,vendetta.metro.common);
